<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.excuseMe.user.mapper.UserMapper">

	<resultMap type="UserDto" id="user">
		<result column="user_id" property="userId"/>
		<result column="name" property="userName"/>
		<result column="password" property="userPwd"/>
		<result column="email" property="email"/>
		<result column="phone" property="phone"/>
		<result column="role" property="role"/>
		<result column="token" property="refreshToken"/>
	</resultMap>
	

	<select id="idCheck" parameterType="String" resultType="int">
		select count(user_id)
		from user
		where user_id = #{userId}
	</select>

	<insert id="joinUser" parameterType="userDto">
		insert into user (name, user_id, password, email, phone, role)
		values (#{userName}, #{userId}, #{userPwd}, #{email}, #{phone}, #{role})
	</insert>

	<select id="loginUser" parameterType="map" resultMap="user">
		select user_id, name, token
		from user
		where user_id = #{userId} and password = #{userPwd}
	</select>
	
	<select id="userInfo" parameterType="string" resultMap="user">
		select name, user_id, password, email, phone
		from user
		where user_id = #{userId}
	</select>
	
	<update id="saveRefreshToken" parameterType="map">
		update user
		set token = #{token}
		where user_id = #{userId}
	</update>
	
	<select id="getRefreshToken" parameterType="string" resultType="string">
		select token
		from user
		where user_id = #{userId}
	</select>
	
	<update id="deleteRefreshToken" parameterType="map">
		update user
		set token = #{token, jdbcType=VARCHAR}
		where user_id = #{userId}
	</update>
	
	<update id="updateUser" parameterType="userDto">
		update user
		<trim prefix="set" suffixOverrides=",">
			<if test="phone != null">phone = #{phone},</if>
			<if test="email != null">email = #{email},</if>
			<if test="userPwd != null">password = #{userPwd},</if>
		</trim>
		where user_id = #{userId}
	</update>
	
	<delete id="deleteUser" parameterType="String">
		delete from user
		where user_id = #{userId}
	</delete>
	
	
	
	
	<!-- ADMIN -->
	<select id="listUser" resultMap="user">
		select *
		from user
	</select>
	
	<select id="getUser" parameterType="string" resultMap="user">
		select *
		from user
		where user_id = #{userId}
	</select>
	
	
</mapper>
